# gaiad v9.0.3 (latest) requires go1.18 but has been updated to go1.20 in a recent commit 
# neutron v1.0.0-rc1 requires go1.20
# staking denom is `icsstake`, consumer denom & bech32 prefix needs to be set in config because we can't be sure about consumer chain genesis structure
# hermes config must be pre-defined in ./hermes_config.toml

# set number of validator vm instances for each chain (beware, because we're running two chains this results in the double number of instances)
NUM_VALIDATORS=5

# A flag that determines wether the generated files and logs are deleted before running tests
CLEAR_FILES_ON_START=true

# provider-chain configuration
PROVIDER_REPO=https://github.com/cosmos/gaia
PROVIDER_VERSION=v9.1.0
PROVIDER_APP=gaiad
PROVIDER_HOME=/home/vagrant/.gaia
PROVIDER_GO_SOURCE=https://go.dev/dl/go1.18.10.linux-amd64.tar.gz

# consumer-chain configuration
CONSUMER_REPO=https://github.com/neutron-org/neutron
CONSUMER_VERSION=v1.0.1
CONSUMER_APP=neutrond
CONSUMER_HOME=/home/vagrant/.neutrond
CONSUMER_GO_SOURCE=https://go.dev/dl/go1.20.3.linux-amd64.tar.gz

CONSUMER_FEE_DENOM=untrn
CONSUMER_BECH32_PREFIX=neutron

# the log level of the chain binaries can be specified, available options are: trace|debug|info|warn|error|fatal|panic
CHAIN_LOG_LEVEL="info"

# If you want to test key assignment, set this to true. 
# Otherwise, the private validator key cdfrom the provider chain will be used when the chain transitions to a consumer chain
KEY_ASSIGNMENT=true

# To make the downloads on the individual virtual machines faster, it is recommended to use a caching server on the host machine
# Set this variable to true if you want to use the caching server. 
# Squid caching server needs to be installed and running on your host machine, a sample config file is provided in the config directory.
CACHE_SERVER=true

# to test your own raw_genesis leave this empty and provide: ./raw_genesis.json
CONSUMER_GENESIS_SOURCE=

# to test your own proposal leave this empty and provide: ./proposal.json
ORIG_PROP_NR=792
ORIG_REST_ENDPOINT=https://rest.cosmos.directory/cosmoshub

# leave empty to build latest hermes version locally
HERMES_SOURCE=https://github.com/informalsystems/hermes/releases/download/v1.7.3/hermes-v1.7.3-x86_64-unknown-linux-gnu.tar.gz
